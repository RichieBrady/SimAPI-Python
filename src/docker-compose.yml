version: '3.7'

services:
  # celery message broker
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
        - "RABBITMQ_DEFAULT_PASS=pass"
        - "RABBITMQ_DEFAULT_USER=user"
        - "RABBITMQ_DEFAULT_VHOST=vhost"
    container_name: broker
    networks:
      - simapi
    restart: always

  # celery result backend
  celery_result_db:
    container_name: backend
    image: postgres
    environment:
      POSTGRES_DB: "backend_db"
      POSTGRES_PASSWORD: "backend"
    networks:
      - simapi
    ports:
      - 5434:5432
    volumes:
      - postgres_celery_data:/var/lib/postgresql/data/
    restart: always

  # stores user and simulation data
  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_DB: "db"
      POSTGRES_PASSWORD: "db_pass"
    networks:
      - simapi
    ports:
    - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  # django rest api
  web:
    container_name: web
    build: ./simapi_web
    command:  bash -c "python manage.py runserver 0.0.0.0:8000
                    & python manage.py migrate
                    & celery -A simapi_web worker -l info --concurrency=1 --queues=web"
    ports:
      - 8000:8000
    depends_on:
      - db
      - rabbitmq
    networks:
      - simapi
    restart: always

  # routes data to and from simulator containers
  router:
    container_name: router
    build: ./input_output_router
    command: bash -c "/run.sh"
    ports:
      - 8001:8000
    depends_on:
      - web
    networks:
      - simapi
    restart: always

  # runs EnergyPlusToFMU, generates FMUs
  generator:
    container_name: generator
    build: ./fmu_generator
    command: bash -c "/run.sh"
    ports:
      - 8002:8000
    depends_on:
      - web
    networks:
      - simapi
    restart: always

  # runs energy+ and python framework pyFMI to initializes and simulate FMUs
  simulator:
    build: ./fmu_simulator
    command: bash -c "/run.sh"
    ports:
      - 8000
    depends_on:
      - web
      - generator
    networks:
      - simapi
    restart: always

networks:
  simapi:
    driver: bridge

volumes:
  postgres_data:
  postgres_celery_data:
