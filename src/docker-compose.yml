version: '3.7'

services:
  #redis:
  #  image: redis:latest
  #  hostname: redis
    # command:  # redis-server --requirepass pass
  #  container_name: backend
  #  environment:
  #    - ALLOW_EMPTY_PASSWORD=yes
  #  networks:
  #    - simapi

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
        - "RABBITMQ_DEFAULT_PASS=pass"
        - "RABBITMQ_DEFAULT_USER=user"
        - "RABBITMQ_DEFAULT_VHOST=vhost"
    container_name: broker
    networks:
      - simapi
    restart: always


  db:
    container_name: db
    image: postgres
    networks:
      - simapi
    ports:
    - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  web:
    container_name: web
    build: ./simapi_web
    command:  bash -c "python manage.py runserver 0.0.0.0:8000
                      & celery -A simapi_web worker -l info --queues=web"
    volumes:
      - ./simapi_web:/code
    ports:
      - 8000:8000
    depends_on:
      - rabbitmq
      - db
    networks:
      - simapi
    restart: always

  generator:
    container_name: generator
    build: ./simapi_simulation/fmu_generator  # change to windows path syntax
    command: bash -c "python generator_api.py
                      & celery -A generator_tasks worker -l info --queues=gen
                      & python fmu_volume_monitor.py /home/fmu/code/energy/test"
    volumes:
      - ./simapi_simulation/fmu_generator/volume:/home/fmu/code/energy/test # change ./simapi_simulation/fmu_generator/volume to windows path syntax
      - ./simapi_simulation/fmu_simulator/fmu_location:/home/fmu/code/fmu_location
    ports:
      - 8001:8000
    depends_on:
      - web
    networks:
      - simapi
    restart: always

  simulator:
    container_name: simulator
    build: ./simapi_simulation/fmu_simulator  # change to windows path syntax
    command: bash -c "python ./simulator_api/sim_api.py
                      & celery -A simulator_tasks worker -l info --queues=sim
                      & python volume_monitor.py /home/deb/code/volume
                      & python fmu_location_monitor.py /home/deb/code/fmu_location"  # & python incoming_json_monitor.py /home/deb/code/store_incoming_json
    volumes:
    - ./simapi_simulation/fmu_simulator:/home/deb/code
    ports:
      - 8002:8000
    depends_on:
      - generator
    networks:
      - simapi
    restart: always

networks:
  simapi:
    driver: bridge
volumes:
  postgres_data:
